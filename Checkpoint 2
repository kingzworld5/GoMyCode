#QUESTION 1
#Write a program that will find all numbers which are divisible by 7 but are not a multiple of 5, 
#between 2000 and 3200 (both included). 
#The numbers obtained should be printed in a list.
# a % 7 == 0 and a % 5 != 0

store = []
for i in range(2000, 3201):
    if i % 7 == 0 and i % 5 != 0:
        store.append(i)
        
    print(store)
    


#QUESTION 2
#Write a program that can compute the factorial of a given number. 
#(The factorial of n is the product of all positive integers less than or equal to n.) 
#For example: For factorial(5)= 5 x 4 x 3 x 2 x 1 the result is 120 (i.e. factorial (0)=1).

def fact(n): 
    if n > 1:
        return n * fact(n - 1) 
    else:
        return 1  
        
 
 #QUESTION 3
 #With a given integer number n, write a program to generate a dictionary that contains (i, i*i)
 #such that is an integral number between 1 and n (both included). 
 #Then, the program should print the dictionary. 
 #Suppose the following input is supplied to the program: 8 Then, 
 #the output should be: {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}
 
 def sqr(n):
    dic = {}
    for i in range(1, n+1):
        a = {i: i*i}
        dic.update(a)
        
    return dic
    print(sqr(20))
    
    
    
    #QUESTION 4
    #Given a non-empty string and an integral n, return a new string where the char at index n has been removed. 
    #The value of n will be a valid index of a char in the original string 
    #(i.e. n will be in the range 0..len(str)-1 inclusive)
    
    def missing_char(string, n):
    if n in range(0, len(string) - 1):
        
        return string.replace(string[n], '', 1)
    
    else:
        print('The string length is less than the integer. Try an integer that is less or equal to {len(string) - 1}.')



    #QUESTION 5
    #Write a Numpy program to convert a Numpy array into a Python list structure.
    
    import numpy as np

    arr2 = np.array([[0,1], [2,3], [4,5]])
    arr2
    
    
    
    #QUESTION 6
    #Write a NumPy program to compute the covariance matrix of two given arrays. 
    
    import numpy as np
    x = np.array([0, 1, 2])
    y = np.array([2, 1, 0])
    print("\nOriginal array1:")
    print(x)
    print("\nOriginal array1:")
    print(y)
    print("\nCovariance matrix of the said arrays:\n",np.cov(x, y))
    
    
    #Question 7
    #a program that calculates and prints the value according to the given formula: 
    #Q= Square root of [(2 * C * D)/H] 
    
    import math

    numbers = input("Provide D: ")
    numbers = numbers.split(',')

    result_list = []
    for D in numbers:
    Q = round(math.sqrt(2 * 50 * int(D) / 30))
    result_list.append(Q)

    print(result_list)
    
